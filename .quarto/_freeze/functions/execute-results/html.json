{
  "hash": "a6c6fea6b01f3763bd3184c66ad154cc",
  "result": {
    "markdown": "# Functions\n\nFunctions in R allow use a set of commands that we can keep calling repeatedly. The goal of a function is to fulfill a certain task, typically relying on inputs from a user. The rest of the problems in this short book has many functions that we ask you to write, so here, we start with some simple functions.\n\n## Questions\n\n1.  Write a function to print `Hello World` if user inputs 1 and `Mellow World` if user inputs 0\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    hello_or_mellow <- function(choice)\n    {\n      if(choice == 1)\n      {\n        print(\"Hello World\")\n      }\n      if(choice == 0)\n      {\n        print(\"Mellow World \")\n      }\n    }\n    ```\n    :::\n\n\n    \\\n\n2.  Write a function to return `Hello World` if user inputs 1 and `Mellow World` if user inputs 0. Think about the difference between this function and that previous one.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    hello_or_mellow <- function(choice)\n    {\n      if(choice == 1)\n      {\n        return(\"Hello World\")\n      }\n      if(choice == 0)\n      {\n        return(\"Mellow World \")\n      }\n    }\n    ```\n    :::\n\n\n    \\\n\n3.  Consider a scenario where a garden is circular, and you need to calculate the area of the garden. Write an R function that takes the radius of the garden as input and returns the area. How would you modify this function if the garden is elliptical instead of circular?\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Function to calculate area of a circular garden\n    calculate_circular_garden_area <- function(radius) \n    {\n      area <- pi * radius^2\n      return(area)\n    }\n    \n    # Function to calculate area of an elliptical garden\n    calculate_elliptical_garden_area <- function(radius1, radius2) {\n      area <- pi * radius1 * radius2\n      return(area)\n    }\n    ```\n    :::\n\n\n    \\\n\n4.  Imagine you have two sets of exam scores, one from the first midterm and the other from the second midterm. Write an R function that takes both sets of scores as inputs and returns the set with the higher average score.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    compare_average_scores <- function(scores1, scores2) \n    {\n      if (mean(scores1) > mean(scores2)) \n      {\n        return(scores1)\n      } else {\n        return(scores2)\n      }\n    }\n    ```\n    :::\n\n\n    \\\n\n5.  (Not a function question) Create two vectors `vec1` and `vec2`, where `vec1` contains 1 and [Your Name]{.underline} while `vec2` contains your JEE Advance/JAM Rank and Answer to the Question as `TRUE` or `FALSE`\n\n    > Dootika Ma'am will give all $A$s in this course\n\n    Can such `vec1` and`vec2` be constructed? If yes, what are the datatype of 1 in `vec1`, and Answer to the question in `vec2`? Use `typeof()` function for finding out.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Define vec1 with 1 and my name\n    vec1 <- c(1, \"Problems\")\n    \n    # Define vec2 with my JEE Advanced Rank (assuming rank as 10000) and the answer to the question \n    jee_rank <- 10000  # Replace this with your actual JEE Advanced Rank/ JAM Rank\n    answer <- TRUE   \n    \n    vec2 <- c(jee_rank, answer)\n    \n    # Print vec1 and vec2 to verify\n    vec1\n    vec2\n    \n    # Check the datatype of 1 in vec1\n    typeof(vec1[1])\n    \n    # Check the datatype of the boolean answer in vec2\n    typeof(vec2[2])\n    ```\n    :::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}